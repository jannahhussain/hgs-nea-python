#Chat History Management (Java)
import java.sql.*;
import java.util.ArrayList;
import java.util.List;

public class ChatHistory {
    private Connection connect() {
        String url = "jdbc:sqlite:messaging_system.db";
        Connection conn = null;
        try {
            conn = DriverManager.getConnection(url);
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
        return conn;
    }

    // Retrieve chat history for a user
    public List<String> getChatHistory(int userId, int friendId) {
        List<String> messages = new ArrayList<>();
        String sql = "SELECT sender_id, receiver_id, message FROM messages WHERE (sender_id=? AND receiver_id=?) OR (sender_id=? AND receiver_id=?) ORDER BY timestamp";

        try (Connection conn = this.connect();
             PreparedStatement pstmt = conn.prepareStatement(sql)) {

            pstmt.setInt(1, userId);
            pstmt.setInt(2, friendId);
            pstmt.setInt(3, friendId);
            pstmt.setInt(4, userId);
            ResultSet rs = pstmt.executeQuery();

            while (rs.next()) {
                int sender = rs.getInt("sender_id");
                String message = rs.getString("message");
                messages.add((sender == userId ? "You: " : "Friend: ") + message);
            }
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
        return messages;
    }

    // Delete chat history
    public void deleteChatHistory(int userId, int friendId) {
        String sql = "DELETE FROM messages WHERE (sender_id=? AND receiver_id=?) OR (sender_id=? AND receiver_id=?)";

        try (Connection conn = this.connect();
             PreparedStatement pstmt = conn.prepareStatement(sql)) {

            pstmt.setInt(1, userId);
            pstmt.setInt(2, friendId);
            pstmt.setInt(3, friendId);
            pstmt.setInt(4, userId);
            pstmt.executeUpdate();
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }

    public static void main(String[] args) {
        ChatHistory chat = new ChatHistory();
        int user1 = 1, user2 = 2;

        // Fetch chat history
        List<String> messages = chat.getChatHistory(user1, user2);
        for (String msg : messages) {
            System.out.println(msg);
        }

        // Delete chat history
        chat.deleteChatHistory(user1, user2);
        System.out.println("Chat history deleted.");
    }
}
